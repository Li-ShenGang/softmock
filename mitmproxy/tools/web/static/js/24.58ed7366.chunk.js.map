{"version":3,"sources":["../node_modules/codemirror/mode/rust/rust.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","string","string_raw","string_raw_hash","comment","meta","dontIndentStates","electricInput","blockCommentStart","blockCommentEnd","lineComment","fold","defineMIME","mod","require","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","i","length","push","Rule","data","this","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","textAfter","line","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"qHAUG,SAASA,GACZ,aAEAA,EAAWC,iBAAiB,OAAO,CACjCC,MAAO,CAEL,CAACC,MAAO,MAAOC,MAAO,SAAUC,KAAM,UAEtC,CAACF,MAAO,OAAQC,MAAO,SAAUC,KAAM,cACvC,CAACF,MAAO,SAAUC,MAAO,SAAUC,KAAM,mBAEzC,CAACF,MAAO,gEAAiEC,MAAO,YAEhF,CAACD,MAAO,6CAA8CC,MAAO,YAE7D,CAACD,MAAO,0MACPC,MAAO,UACR,CAACD,MAAO,8EAA+EC,MAAO,CAAC,UAAW,KAAM,QAChH,CAACD,MAAO,sSAAuSC,MAAO,WACtT,CAACD,MAAO,0FAA2FC,MAAO,QAC1G,CAACD,MAAO,sCAAuCC,MAAO,WACtD,CAACD,MAAO,sCACPC,MAAO,CAAC,UAAW,KAAM,QAC1B,CAACD,MAAO,YAAaC,MAAO,QAC5B,CAACD,MAAO,SAAUC,MAAO,WACzB,CAACD,MAAO,OAAQC,MAAO,UAAWC,KAAM,WACxC,CAACF,MAAO,eAAgBC,MAAO,YAC/B,CAACD,MAAO,gBAAgBC,MAAO,cAC/B,CAACD,MAAO,eAAgBC,MAAO,YAC/B,CAACD,MAAO,WAAYG,QAAQ,GAC5B,CAACH,MAAO,WAAYI,QAAQ,IAE9BC,OAAQ,CACN,CAACL,MAAO,IAAKC,MAAO,SAAUC,KAAM,SACpC,CAACF,MAAO,wBAAyBC,MAAO,WAE1CK,WAAY,CACV,CAACN,MAAO,IAAKC,MAAO,SAAUC,KAAM,SACpC,CAACF,MAAO,QAASC,MAAO,WAE1BM,gBAAiB,CACf,CAACP,MAAO,MAAOC,MAAO,SAAUC,KAAM,SACtC,CAACF,MAAO,mBAAoBC,MAAO,WAErCO,QAAS,CACP,CAACR,MAAO,UAAWC,MAAO,UAAWC,KAAM,SAC3C,CAACF,MAAO,KAAMC,MAAO,YAEvBQ,KAAM,CACJC,iBAAkB,CAAC,WACnBC,cAAe,UACfC,kBAAmB,KACnBC,gBAAiB,KACjBC,YAAa,KACbC,KAAM,WAKVlB,EAAWmB,WAAW,iBAAkB,QACxCnB,EAAWmB,WAAW,YAAa,QAjE/BC,CAAIC,EAAQ,IAAyBA,EAAQ,O,qBCK9C,SAASrB,GACV,aAiDA,SAASsB,EAAYC,EAAQC,GAC3B,IAAKD,EAAOE,eAAeD,GACzB,MAAM,IAAIE,MAAM,mBAAqBF,EAAO,mBAGhD,SAASG,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAO,OACjB,IAAIE,EAAQ,GAOZ,OANIF,aAAeG,QACbH,EAAII,aAAYF,EAAQ,KAC5BF,EAAMA,EAAIK,QAEVL,EAAMM,OAAON,GAER,IAAIG,SAAkB,IAAVF,EAAkB,GAAK,KAAO,MAAQD,EAAM,IAAKE,GAGtE,SAASK,EAAQP,GACf,IAAKA,EAAK,OAAO,KACjB,GAAIA,EAAIQ,MAAO,OAAOR,EACtB,GAAkB,iBAAPA,EAAiB,OAAOA,EAAIS,QAAQ,MAAO,KAEtD,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIX,EAAIY,OAAQD,IAC9BD,EAAOG,KAAKb,EAAIW,IAAMX,EAAIW,GAAGF,QAAQ,MAAO,MAC9C,OAAOC,EAGT,SAASI,EAAKC,EAAMpB,IACdoB,EAAKtC,MAAQsC,EAAKF,OAAMnB,EAAYC,EAAQoB,EAAKtC,MAAQsC,EAAKF,MAClEG,KAAKzC,MAAQwB,EAAQgB,EAAKxC,OAC1ByC,KAAKxC,MAAQ+B,EAAQQ,EAAKvC,OAC1BwC,KAAKD,KAAOA,EAGd,SAASE,EAActB,EAAQuB,GAC7B,OAAO,SAASC,EAAQC,GACtB,GAAIA,EAAMC,QAAS,CACjB,IAAIC,EAAOF,EAAMC,QAAQE,QAGzB,OAF4B,GAAxBH,EAAMC,QAAQT,SAAaQ,EAAMC,QAAU,MAC/CF,EAAOK,KAAOF,EAAKG,KAAKb,OACjBU,EAAK9C,MAGd,GAAI4C,EAAMM,MAAO,CACf,GAAIN,EAAMM,MAAMC,KAAOR,EAAOS,MAAMR,EAAMM,MAAMC,KAAM,CACpD,IAAIE,EAAMT,EAAMM,MAAMI,UAAY,KAElC,OADAV,EAAMM,MAAQN,EAAMW,WAAa,KAC1BF,EAEP,IAA4DG,EAG5D,OAHIH,EAAMT,EAAMM,MAAMO,KAAKzD,MAAM2C,EAAQC,EAAMW,YAC3CX,EAAMM,MAAMQ,UAAYF,EAAIZ,EAAMM,MAAMQ,QAAQC,KAAKhB,EAAOiB,cAC9DjB,EAAOK,IAAML,EAAO7C,MAAQ0D,EAAEK,OACzBR,EAKX,IADA,IAAIS,EAAW3C,EAAOyB,EAAMA,OACnBT,EAAI,EAAGA,EAAI2B,EAAS1B,OAAQD,IAAK,CACxC,IAAI4B,EAAOD,EAAS3B,GAChB6B,IAAYD,EAAKxB,KAAK0B,KAAOtB,EAAOsB,QAAUtB,EAAOS,MAAMW,EAAKhE,OACpE,GAAIiE,EAAS,CACPD,EAAKxB,KAAKtC,KACZ2C,EAAMA,MAAQmB,EAAKxB,KAAKtC,KACf8D,EAAKxB,KAAKF,OAClBO,EAAMsB,QAAUtB,EAAMsB,MAAQ,KAAK7B,KAAKO,EAAMA,OAC/CA,EAAMA,MAAQmB,EAAKxB,KAAKF,MACf0B,EAAKxB,KAAK4B,KAAOvB,EAAMsB,OAAStB,EAAMsB,MAAM9B,SACrDQ,EAAMA,MAAQA,EAAMsB,MAAMC,OAGxBJ,EAAKxB,KAAKkB,MACZW,EAAe1B,EAAQE,EAAOmB,EAAKxB,KAAKkB,KAAMM,EAAK/D,OACjD+D,EAAKxB,KAAKrC,QACZ0C,EAAM1C,OAAOmC,KAAKM,EAAO0B,cAAgB3B,EAAO4B,YAC9CP,EAAKxB,KAAKpC,QACZyC,EAAM1C,OAAOiE,MACf,IAAInE,EAAQ+D,EAAK/D,MAEjB,GADIA,GAASA,EAAMgC,QAAOhC,EAAQA,EAAMgE,IACpCA,EAAQ5B,OAAS,GAAK2B,EAAK/D,OAA8B,iBAAd+D,EAAK/D,MAAmB,CACrE4C,EAAMC,QAAU,GAChB,IAAK,IAAI0B,EAAI,EAAGA,EAAIP,EAAQ5B,OAAQmC,IAC9BP,EAAQO,IACV3B,EAAMC,QAAQR,KAAK,CAACY,KAAMe,EAAQO,GAAIvE,MAAO+D,EAAK/D,MAAMuE,EAAI,KAEhE,OADA5B,EAAO6B,OAAOR,EAAQ,GAAG5B,QAAU4B,EAAQ,GAAKA,EAAQ,GAAG5B,OAAS,IAC7DpC,EAAM,GACR,OAAIA,GAASA,EAAMyE,KACjBzE,EAAM,GAENA,GAKb,OADA2C,EAAO1C,OACA,MAIX,SAASyE,EAAIC,EAAGC,GACd,GAAID,IAAMC,EAAG,OAAO,EACpB,IAAKD,GAAiB,iBAALA,IAAkBC,GAAiB,iBAALA,EAAe,OAAO,EACrE,IAAIC,EAAQ,EACZ,IAAK,IAAIC,KAAQH,EAAG,GAAIA,EAAEtD,eAAeyD,GAAO,CAC9C,IAAKF,EAAEvD,eAAeyD,KAAUJ,EAAIC,EAAEG,GAAOF,EAAEE,IAAQ,OAAO,EAC9DD,IAEF,IAAK,IAAIC,KAAQF,EAAOA,EAAEvD,eAAeyD,IAAOD,IAChD,OAAgB,GAATA,EAGT,SAAST,EAAe1B,EAAQE,EAAOmC,EAAM/E,GAC3C,IAAIgF,EACJ,GAAID,EAAKE,WAAY,IAAK,IAAIC,EAAItC,EAAMuC,iBAAkBD,IAAMF,EAAME,EAAIA,EAAEjF,MACtE8E,EAAKA,KAAOL,EAAIK,EAAKA,KAAMG,EAAEH,MAAQA,EAAKtB,MAAQyB,EAAEzB,QAAMuB,EAAOE,GACvE,IAAIzB,EAAOuB,EAAOA,EAAKvB,KAAOsB,EAAKtB,MAAQ7D,EAAWwF,QAAQ1C,EAAQqC,EAAKA,MACvEM,EAASL,EAAOA,EAAKpC,MAAQhD,EAAW0F,WAAW7B,GACnDsB,EAAKE,aAAeD,IACtBpC,EAAMuC,iBAAmB,CAAC1B,KAAMA,EAAMsB,KAAMA,EAAKA,KAAMnC,MAAOyC,EAAQpF,KAAM2C,EAAMuC,mBAEpFvC,EAAMW,WAAa8B,EACnBzC,EAAMM,MAAQ,CAACO,KAAMA,EACNN,IAAK4B,EAAK5B,KAAO5B,EAAQwD,EAAK5B,KAC9BO,QAASqB,EAAK5B,MAAyB,IAAlB4B,EAAKQ,UAAsBhE,EAAQwD,EAAK5B,KAAK,GAClEG,SAAUtD,GAASA,EAAMyE,KAAOzE,EAAMA,EAAMoC,OAAS,GAAKpC,GAG3E,SAASwF,EAAQhE,EAAKiE,GACpB,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,EAAIrD,OAAQD,IAAK,GAAIsD,EAAItD,KAAOX,EAAK,OAAO,EAGlE,SAASkE,EAAevE,EAAQX,GAC9B,OAAO,SAASoC,EAAO+C,EAAWC,GAChC,GAAIhD,EAAMM,OAASN,EAAMM,MAAMO,KAAKvD,OAClC,OAAO0C,EAAMM,MAAMO,KAAKvD,OAAO0C,EAAMW,WAAYoC,EAAWC,GAC9D,GAAoB,MAAhBhD,EAAM1C,QAAkB0C,EAAMM,OAAS1C,EAAKC,kBAAoB+E,EAAQ5C,EAAMA,MAAOpC,EAAKC,mBAAqB,EACjH,OAAOb,EAAWiG,KAEpB,IAAI7C,EAAMJ,EAAM1C,OAAOkC,OAAS,EAAG0D,EAAQ3E,EAAOyB,EAAMA,OACxDmD,EAAM,OAAS,CACb,IAAK,IAAI5D,EAAI,EAAGA,EAAI2D,EAAM1D,OAAQD,IAAK,CACrC,IAAI4B,EAAO+B,EAAM3D,GACjB,GAAI4B,EAAKxB,KAAKpC,SAA0C,IAAhC4D,EAAKxB,KAAKyD,kBAA6B,CAC7D,IAAIxC,EAAIO,EAAKhE,MAAM4D,KAAKgC,GACxB,GAAInC,GAAKA,EAAE,GAAI,CACbR,KACIe,EAAK9D,MAAQ8D,EAAK1B,QAAMyD,EAAQ3E,EAAO4C,EAAK9D,MAAQ8D,EAAK1B,OAC7DsD,EAAYA,EAAUM,MAAMzC,EAAE,GAAGpB,QACjC,SAAS2D,IAIf,MAEF,OAAO/C,EAAM,EAAI,EAAIJ,EAAM1C,OAAO8C,IAvMtCpD,EAAWC,iBAAmB,SAASuB,EAAMD,GAC3CvB,EAAWsG,WAAW9E,GAAM,SAASsB,GACnC,OAAO9C,EAAWuG,WAAWzD,EAAQvB,OAIzCvB,EAAWuG,WAAa,SAASzD,EAAQvB,GACvCD,EAAYC,EAAQ,SACpB,IAAIiF,EAAU,GAAI5F,EAAOW,EAAOX,MAAQ,GAAI6F,GAAiB,EAC7D,IAAK,IAAIzD,KAASzB,EAAQ,GAAIyB,GAASpC,GAAQW,EAAOE,eAAeuB,GAEnE,IADA,IAAI0D,EAAOF,EAAQxD,GAAS,GAAI2D,EAAOpF,EAAOyB,GACrCT,EAAI,EAAGA,EAAIoE,EAAKnE,OAAQD,IAAK,CACpC,IAAII,EAAOgE,EAAKpE,GAChBmE,EAAKjE,KAAK,IAAIC,EAAKC,EAAMpB,KACrBoB,EAAKrC,QAAUqC,EAAKpC,UAAQkG,GAAiB,GAGrD,IAAI5C,EAAO,CACT6B,WAAY,WACV,MAAO,CAAC1C,MAAO,QAASC,QAAS,KACzBK,MAAO,KAAMK,WAAY,KACzBrD,OAAQmG,EAAiB,GAAK,OAExCG,UAAW,SAAS5D,GAClB,IAAI6D,EAAI,CAAC7D,MAAOA,EAAMA,MAAOC,QAASD,EAAMC,QACnCK,MAAON,EAAMM,MAAOK,WAAY,KAChCrD,OAAQ0C,EAAM1C,QAAU0C,EAAM1C,OAAO+F,MAAM,IAChDrD,EAAMW,aACRkD,EAAElD,WAAa3D,EAAW4G,UAAU5D,EAAMM,MAAMO,KAAMb,EAAMW,aAC1DX,EAAMsB,QACRuC,EAAEvC,MAAQtB,EAAMsB,MAAM+B,MAAM,IAC9B,IAAK,IAAIjB,EAAOpC,EAAMuC,iBAAkBH,EAAMA,EAAOA,EAAK/E,KACxDwG,EAAEtB,iBAAmB,CAAC1B,KAAMuB,EAAKvB,KACXsB,KAAMC,EAAKD,KACXnC,MAAOoC,EAAKpC,OAASA,EAAMW,WAAakD,EAAElD,WAAa3D,EAAW4G,UAAUxB,EAAKvB,KAAMuB,EAAKpC,OAC5F3C,KAAMwG,EAAEtB,kBAChC,OAAOsB,GAETzG,MAAOyC,EAAc2D,EAAS1D,GAC9BgE,UAAW,SAAS9D,GAAS,OAAOA,EAAMM,OAAS,CAACO,KAAMb,EAAMM,MAAMO,KAAMb,MAAOA,EAAMW,aACzFrD,OAAQwF,EAAeU,EAAS5F,IAElC,GAAIA,EAAM,IAAK,IAAIsE,KAAQtE,EAAUA,EAAKa,eAAeyD,KACvDrB,EAAKqB,GAAQtE,EAAKsE,IACpB,OAAOrB,GApDPzC,CAAIC,EAAQ","file":"static/js/24.58ed7366.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineSimpleMode(\"rust\",{\n  start: [\n    // string and byte string\n    {regex: /b?\"/, token: \"string\", next: \"string\"},\n    // raw string and raw byte string\n    {regex: /b?r\"/, token: \"string\", next: \"string_raw\"},\n    {regex: /b?r#+\"/, token: \"string\", next: \"string_raw_hash\"},\n    // character\n    {regex: /'(?:[^'\\\\]|\\\\(?:[nrt0'\"]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\}))'/, token: \"string-2\"},\n    // byte\n    {regex: /b'(?:[^']|\\\\(?:['\\\\nrt0]|x[\\da-fA-F]{2}))'/, token: \"string-2\"},\n\n    {regex: /(?:(?:[0-9][0-9_]*)(?:(?:[Ee][+-]?[0-9_]+)|\\.[0-9_]+(?:[Ee][+-]?[0-9_]+)?)(?:f32|f64)?)|(?:0(?:b[01_]+|(?:o[0-7_]+)|(?:x[0-9a-fA-F_]+))|(?:[0-9][0-9_]*))(?:u8|u16|u32|u64|i8|i16|i32|i64|isize|usize)?/,\n     token: \"number\"},\n    {regex: /(let(?:\\s+mut)?|fn|enum|mod|struct|type|union)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/, token: [\"keyword\", null, \"def\"]},\n    {regex: /(?:abstract|alignof|as|async|await|box|break|continue|const|crate|do|dyn|else|enum|extern|fn|for|final|if|impl|in|loop|macro|match|mod|move|offsetof|override|priv|proc|pub|pure|ref|return|self|sizeof|static|struct|super|trait|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, token: \"keyword\"},\n    {regex: /\\b(?:Self|isize|usize|char|bool|u8|u16|u32|u64|f16|f32|f64|i8|i16|i32|i64|str|Option)\\b/, token: \"atom\"},\n    {regex: /\\b(?:true|false|Some|None|Ok|Err)\\b/, token: \"builtin\"},\n    {regex: /\\b(fn)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/,\n     token: [\"keyword\", null ,\"def\"]},\n    {regex: /#!?\\[.*\\]/, token: \"meta\"},\n    {regex: /\\/\\/.*/, token: \"comment\"},\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n    {regex: /[a-zA-Z_]\\w*!/,token: \"variable-3\"},\n    {regex: /[a-zA-Z_]\\w*/, token: \"variable\"},\n    {regex: /[\\{\\[\\(]/, indent: true},\n    {regex: /[\\}\\]\\)]/, dedent: true}\n  ],\n  string: [\n    {regex: /\"/, token: \"string\", next: \"start\"},\n    {regex: /(?:[^\\\\\"]|\\\\(?:.|$))*/, token: \"string\"}\n  ],\n  string_raw: [\n    {regex: /\"/, token: \"string\", next: \"start\"},\n    {regex: /[^\"]*/, token: \"string\"}\n  ],\n  string_raw_hash: [\n    {regex: /\"#+/, token: \"string\", next: \"start\"},\n    {regex: /(?:[^\"]|\"(?!#))*/, token: \"string\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  meta: {\n    dontIndentStates: [\"comment\"],\n    electricInput: /^\\s*\\}$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  }\n});\n\n\nCodeMirror.defineMIME(\"text/x-rustsrc\", \"rust\");\nCodeMirror.defineMIME(\"text/rust\", \"rust\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"sourceRoot":""}