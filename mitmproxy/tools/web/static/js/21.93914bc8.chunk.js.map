{"version":3,"sources":["../node_modules/codemirror/mode/dockerfile/dockerfile.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","from","fromRegex","RegExp","shells","shellsAsArrayRegex","join","expose","exposeRegex","others","instructionRegex","concat","instructionOnlyLine","instructionWithArguments","defineSimpleMode","start","regex","sol","token","next","single","pop","double","array","arguments","push","meta","lineComment","defineMIME","mod","require","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","ignoreCase","source","String","asToken","apply","replace","result","i","length","Rule","data","this","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","stack","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/21.93914bc8.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var from = \"from\";\n  var fromRegex = new RegExp(\"^(\\\\s*)\\\\b(\" + from + \")\\\\b\", \"i\");\n\n  var shells = [\"run\", \"cmd\", \"entrypoint\", \"shell\"];\n  var shellsAsArrayRegex = new RegExp(\"^(\\\\s*)(\" + shells.join('|') + \")(\\\\s+\\\\[)\", \"i\");\n\n  var expose = \"expose\";\n  var exposeRegex = new RegExp(\"^(\\\\s*)(\" + expose + \")(\\\\s+)\", \"i\");\n\n  var others = [\n    \"arg\", \"from\", \"maintainer\", \"label\", \"env\",\n    \"add\", \"copy\", \"volume\", \"user\",\n    \"workdir\", \"onbuild\", \"stopsignal\", \"healthcheck\", \"shell\"\n  ];\n\n  // Collect all Dockerfile directives\n  var instructions = [from, expose].concat(shells).concat(others),\n      instructionRegex = \"(\" + instructions.join('|') + \")\",\n      instructionOnlyLine = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s*)(#.*)?$\", \"i\"),\n      instructionWithArguments = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s+)\", \"i\");\n\n  CodeMirror.defineSimpleMode(\"dockerfile\", {\n    start: [\n      // Block comment: This is a line starting with a comment\n      {\n        regex: /^\\s*#.*$/,\n        sol: true,\n        token: \"comment\"\n      },\n      {\n        regex: fromRegex,\n        token: [null, \"keyword\"],\n        sol: true,\n        next: \"from\"\n      },\n      // Highlight an instruction without any arguments (for convenience)\n      {\n        regex: instructionOnlyLine,\n        token: [null, \"keyword\", null, \"error\"],\n        sol: true\n      },\n      {\n        regex: shellsAsArrayRegex,\n        token: [null, \"keyword\", null],\n        sol: true,\n        next: \"array\"\n      },\n      {\n        regex: exposeRegex,\n        token: [null, \"keyword\", null],\n        sol: true,\n        next: \"expose\"\n      },\n      // Highlight an instruction followed by arguments\n      {\n        regex: instructionWithArguments,\n        token: [null, \"keyword\", null],\n        sol: true,\n        next: \"arguments\"\n      },\n      {\n        regex: /./,\n        token: null\n      }\n    ],\n    from: [\n      {\n        regex: /\\s*$/,\n        token: null,\n        next: \"start\"\n      },\n      {\n        // Line comment without instruction arguments is an error\n        regex: /(\\s*)(#.*)$/,\n        token: [null, \"error\"],\n        next: \"start\"\n      },\n      {\n        regex: /(\\s*\\S+\\s+)(as)/i,\n        token: [null, \"keyword\"],\n        next: \"start\"\n      },\n      // Fail safe return to start\n      {\n        token: null,\n        next: \"start\"\n      }\n    ],\n    single: [\n      {\n        regex: /(?:[^\\\\']|\\\\.)/,\n        token: \"string\"\n      },\n      {\n        regex: /'/,\n        token: \"string\",\n        pop: true\n      }\n    ],\n    double: [\n      {\n        regex: /(?:[^\\\\\"]|\\\\.)/,\n        token: \"string\"\n      },\n      {\n        regex: /\"/,\n        token: \"string\",\n        pop: true\n      }\n    ],\n    array: [\n      {\n        regex: /\\]/,\n        token: null,\n        next: \"start\"\n      },\n      {\n        regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n        token: \"string\"\n      }\n    ],\n    expose: [\n      {\n        regex: /\\d+$/,\n        token: \"number\",\n        next: \"start\"\n      },\n      {\n        regex: /[^\\d]+$/,\n        token: null,\n        next: \"start\"\n      },\n      {\n        regex: /\\d+/,\n        token: \"number\"\n      },\n      {\n        regex: /[^\\d]+/,\n        token: null\n      },\n      // Fail safe return to start\n      {\n        token: null,\n        next: \"start\"\n      }\n    ],\n    arguments: [\n      {\n        regex: /^\\s*#.*$/,\n        sol: true,\n        token: \"comment\"\n      },\n      {\n        regex: /\"(?:[^\\\\\"]|\\\\.)*\"?$/,\n        token: \"string\",\n        next: \"start\"\n      },\n      {\n        regex: /\"/,\n        token: \"string\",\n        push: \"double\"\n      },\n      {\n        regex: /'(?:[^\\\\']|\\\\.)*'?$/,\n        token: \"string\",\n        next: \"start\"\n      },\n      {\n        regex: /'/,\n        token: \"string\",\n        push: \"single\"\n      },\n      {\n        regex: /[^#\"']+[\\\\`]$/,\n        token: null\n      },\n      {\n        regex: /[^#\"']+$/,\n        token: null,\n        next: \"start\"\n      },\n      {\n        regex: /[^#\"']+/,\n        token: null\n      },\n      // Fail safe return to start\n      {\n        token: null,\n        next: \"start\"\n      }\n    ],\n    meta: {\n      lineComment: \"#\"\n    }\n  });\n\n  CodeMirror.defineMIME(\"text/x-dockerfile\", \"dockerfile\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"sourceRoot":""}