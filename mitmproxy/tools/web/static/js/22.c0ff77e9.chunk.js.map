{"version":3,"sources":["../node_modules/codemirror/mode/factor/factor.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","next","vocabulary","string","string2","string3","stack","meta","dontIndentStates","lineComment","defineMIME","mod","require","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","i","length","push","Rule","data","this","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","textAfter","line","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/22.c0ff77e9.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Factor syntax highlight - simple mode\n//\n// by Dimage Sapelkin (https://github.com/kerabromsmu)\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"factor\", {\n    // The start state contains the rules that are intially used\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    // The meta property contains global information about the mode. It\n    // can contain properties like lineComment, which are supported by\n    // all modes, and also directives like dontIndentStates, which are\n    // specific to simple modes.\n    meta: {\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      lineComment: [ \"!\", \"#!\" ]\n    }\n  });\n\n  CodeMirror.defineMIME(\"text/x-factor\", \"factor\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"sourceRoot":""}